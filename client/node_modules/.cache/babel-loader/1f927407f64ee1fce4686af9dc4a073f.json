{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../Firebase/firebase.config';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired!');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n\n  ;\n}\n;\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n;\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n;","map":{"version":3,"sources":["C:/Users/dbarr/Documents/ZTM-COMPLETEREACTDEV/crown-clothing/src/Redux/Shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,gCAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMZ,GAAG,CAACI,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;;AAAA;AACJ;AAAA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CAACQ,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAhB;AACH;AAAA;AAED,OAAO,UAAUY,SAAV,GAAsB;AACzB,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,qBAAD,CAAL,CAAD,CAAT;AACH;AAAA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../Firebase/firebase.config';\r\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\r\n\r\nimport ShopActionTypes from './shop.types';\r\n\r\n\r\nexport function* fetchCollectionsAsync() {\r\n    yield console.log('I am fired!');\r\n\r\n    try {\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message));\r\n    };\r\n};\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\r\n};\r\n\r\nexport function* shopSagas() {\r\n    yield all([call(fetchCollectionsStart)])\r\n};"]},"metadata":{},"sourceType":"module"}