{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCBL4IL15oEzDMGuN-w6cgsa5N78v-Wa2c\",\n  authDomain: \"crown-cloth-db-2c1f2.firebaseapp.com\",\n  projectId: \"crown-cloth-db-2c1f2\",\n  storageBucket: \"crown-cloth-db-2c1f2.appspot.com\",\n  messagingSenderId: \"683862835634\",\n  appId: \"1:683862835634:web:5c5e20776dd06d44cce4ab\",\n  measurementId: \"G-1S6QQB7NBQ\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestore.collection('users');\n  const snapShot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n  console.log({\n    collection: collectionSnapshot.docs.map(doc => doc.data())\n  });\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n\n    ;\n  }\n\n  ;\n  return userRef;\n};\nexport default firebase;","map":{"version":3,"sources":["C:/Users/dbarr/Documents/ZTM-COMPLETEREACTDEV/crown-clothing/src/Firebase/firebase.config.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","collectionRef","collection","snapShot","get","collectionSnapshot","console","log","docs","map","data","exists","displayName","email","createdAt","Date","set","error","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,sCAFD;AAGXC,EAAAA,SAAS,EAAE,sBAHA;AAIXC,EAAAA,aAAa,EAAE,kCAJJ;AAKXC,EAAAA,iBAAiB,EAAE,cALR;AAMXC,EAAAA,KAAK,EAAE,2CANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAWER,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,IAAI,GAAGV,QAAQ,CAACU,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGX,QAAQ,CAACW,SAAT,EAAlB;AAEP,MAAMC,QAAQ,GAAG,IAAIZ,QAAQ,CAACU,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,OAAO,MAAMM,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGV,SAAS,CAACW,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAMJ,aAAa,CAACG,GAAd,EAAjC;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA,UAAU,EAAEG,kBAAkB,CAACG,IAAnB,CAAwBC,GAAxB,CAA4BV,GAAG,IAAIA,GAAG,CAACW,IAAJ,EAAnC;AAAb,GAAZ;;AAEA,MAAG,CAACP,QAAQ,CAACQ,MAAb,EAAqB;AACnB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBjB,QAA/B;AACA,UAAMkB,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMjB,OAAO,CAACkB,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGjB;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOoB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCU,KAAK,CAACC,OAAzC;AACD;;AAAA;AACF;;AAAA;AAED,SAAOpB,OAAP;AAED,CA3BM;AA6BP,eAAerB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCBL4IL15oEzDMGuN-w6cgsa5N78v-Wa2c\",\r\n    authDomain: \"crown-cloth-db-2c1f2.firebaseapp.com\",\r\n    projectId: \"crown-cloth-db-2c1f2\",\r\n    storageBucket: \"crown-cloth-db-2c1f2.appspot.com\",\r\n    messagingSenderId: \"683862835634\",\r\n    appId: \"1:683862835634:web:5c5e20776dd06d44cce4ab\",\r\n    measurementId: \"G-1S6QQB7NBQ\"\r\n  };\r\n\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: 'select_account'});\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const collectionRef = firestore.collection('users');\r\n    \r\n    const snapShot = await userRef.get();\r\n    const collectionSnapshot = await collectionRef.get();\r\n    console.log({collection: collectionSnapshot.docs.map(doc => doc.data()) });\r\n\r\n    if(!snapShot.exists) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try { \r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch (error) {\r\n        console.log('error creating user', error.message);\r\n      };\r\n    };\r\n\r\n    return userRef;\r\n\r\n  }\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}